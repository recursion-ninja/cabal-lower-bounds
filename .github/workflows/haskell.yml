name: Cabal Lower Bounds CI

on:
  push: # all pushes
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 0 1 * *'

env:
      THISPACKAGE: cabal-lower-bounds
      CONFIG: --enable-tests --enable-benchmarks

defaults:
  run:
    shell: bash

jobs:
  # Check that the project builds with the specified lower bounds.
  build:
    env:
      CONSTRAINTS: --project-file=lower-bounds.project
    name: lower-bounds-check
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - ghc:   7.10.3
            cabal: 3.0.0.0
            os:    ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        name: caching lower bounds check
        with:
          path: |
            ~/.cabal/store
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
          # restore keys is a fall back when the freeze plan is different
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-

      - uses: actions/setup-haskell@v1
        name: Setup Haskell
        with:
          ghc-version:   ${{ matrix.ghc   }}
          cabal-version: ${{ matrix.cabal }}

      - run: cabal update
      - run: cabal clean
      - run: cabal configure $CONFIG $CONSTRAINTS
      - run: cabal freeze    $CONFIG $CONSTRAINTS
      - run: cabal build --only-dependencies
      - run: cabal build $CONFIG
      - run: cabal check
      - run: cabal sdist -o `pwd`

  # Cabal build matrix
  cabal:
    name: GHC-${{ matrix.ghc }}, cabal${{matrix.cabal}}, ${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc:   [ '7.10.3', '8.0.2', '8.2.2', '8.4.4', '8.6.5', '8.8.4', '8.10.2', 'latest' ]
        cabal: [ '3.0.0.0', '3.2.0.0', 'latest' ]
        os:    [ ubuntu-latest, macOS-latest ]

    steps:
      - uses: actions/checkout@v2
      - name: Setup Haskell
        uses: actions/setup-haskell@v1
        with:
          ghc-version:   ${{ matrix.ghc   }}
          cabal-version: ${{ matrix.cabal }}
      - run: cabal update
      - run: cabal clean
      - run: cabal configure $CONFIG $CONSTRAINTS
      - run: cabal freeze    $CONFIG $CONSTRAINTS
      - uses: actions/cache@v2
        name: windows caching
        with:
          path: |
            c:\sr
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
          # restore keys is a fall back when the freeze plan is different
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-
        if:  matrix.os == 'windows-latest'
      - uses: actions/cache@v2
        name: ubuntu-linux and osx caching
        with:
          path: |
            ~/.cabal/store
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
          # restore keys is a fall back when the freeze plan is different
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-
        if:  matrix.os != 'windows-latest'
      - run: cabal build --only-dependencies
      - run: cabal build $CONFIG
      - run: cabal check
      - run: cabal sdist -o `pwd`
